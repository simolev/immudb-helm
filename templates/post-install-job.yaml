apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: {{ .Chart.Name }}-init
        image: alpine:latest
        command:
          - sh
          - "-c"
          - |
            set -x
            #apk add bind-tools libc6-compat
            #wget https://github.com/vchain-us/immudb/releases/download/v1.3.0/immuadmin-v1.3.0-linux-amd64 -O immuadmin
            #chmod +x immuadmin
            #echo "Number of replicas is $REPLICAS"
            #echo "My hostname is "$(hostname)
            #READ=$(hostname | sed 's/[^-\]*$/immudb-read/')
            #WRITE=$(hostname | sed 's/[^-\]*$/immudb-write/')
            #echo "Service name for reads is $READ"
            #echo "Service name for writes is $WRITE"
            #timeout 30 sh -c 'until nslookup $0; do echo waiting for service $0; sleep 1; done' $WRITE
            #timeout 30 sh -c 'until nc -z $0 $1; do sleep 1; done' $WRITE 3322
            #echo -n "immudb" | ./immuadmin -a $WRITE login immudb
            #./immuadmin -a $WRITE database create replicadb
            #./immuadmin -a $WRITE logout
            #for i in $(seq 0 $((REPLICAS-1))); do
            #  timeout 30 sh -c 'until nslookup $0; do echo waiting for service $0; sleep 1; done' $READ-$i
            #  timeout 30 sh -c 'until nc -z $0 $1; do sleep 1; done' $READ-$i 8080
            #  echo -n "immudb" | ./immuadmin -a $READ-$i login immudb
            #  ./immuadmin -a $READ-$i database create --replication-enabled=true --replication-follower-username=immudb --replication-follower-password=immudb --replication-master-address $WRITE --replication-master-database=replicadb replicadb
            #  ./immuadmin -a $READ-$i logout
            #done
            #sleep 30
        env:
          - name: REPLICAS
            value: "{{ .Values.replicaCount }}"
